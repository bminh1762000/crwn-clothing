{"version":3,"sources":["redux/shop/shop.selector.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx","components/collection-preview/collection-preview.styles.jsx","components/collection-preview/collection-preview.component.jsx","components/collections-overview/collection-overview.styles.jsx","components/collections-overview/collection-overview.component.jsx","components/collections-overview/collection-overview.container.jsx","pages/collection/collection.styles.jsx","pages/collection/collection.component.jsx","pages/collection/collection.container.jsx","pages/shop/shop.component.jsx"],"names":["selectShop","state","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","map","key","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded","WithSpinner","WrappedComponent","isLoading","otherProps","CollectionItemContainer","styled","div","AddButton","CustomButton","CollectionItemImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","connect","dispatch","addItem","item","name","price","onClick","CollectionPreviewContainer","TitleContainer","h1","PreviewContainer","withRouter","title","items","history","match","routeName","push","path","toUpperCase","filter","idx","id","CollectionsOverviewCotainer","mapStateToProps","createStructuredSelector","otherCollectionsProps","CollectionsOverviewContainer","compose","CollectionsOverview","CollectionPageContainer","ItemsContainer","ownProps","collection","collectionUrlParam","params","collectionId","CollectionPage","fetchCollectionsStart","useEffect","className","exact","component"],"mappings":"sKAEMA,EAAa,SAAAC,GAAK,OAAIA,EAAMC,MAErBC,EAAoBC,YAC7B,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKG,eAGJC,EAA8BF,YACvC,CAACD,IACD,SAAAE,GAAW,OAAKA,EAAcE,OAAOC,KAAKH,GAAaI,KAAI,SAAAC,GAAG,OAAIL,EAAYK,MAAQ,MAU7EC,EAA6BP,YACtC,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKU,cAGJC,EAA4BT,YACrC,CAACJ,IACD,SAAAE,GAAI,OAAKA,EAAKG,e,gBChBHS,EARK,SAACC,GAKnB,OAJgB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,UAAcC,EAAiB,6BAChD,OAAOD,EAAY,kBAAC,IAAD,MAAe,kBAACD,EAAqBE,K,qtDCHrD,IAAMC,EAA0BC,IAAOC,IAAV,KAkCvBC,EAAYF,YAAOG,IAAPH,CAAH,KAiBTI,EAAsBJ,IAAOC,IAAV,KAQV,gBAAGI,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAA4BN,IAAOC,IAAV,KAQzBM,EAAgBP,IAAOQ,KAAV,KASbC,EAAiBT,IAAOQ,KAAV,KCrDZE,cACb,MALyB,SAAAC,GAAQ,MAAK,CACtCC,QAAS,SAAAC,GAAI,OAAIF,EAASC,YAAQC,QAGrBH,EArBQ,SAAC,GAAuB,IAArBG,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QACtBE,EAA0BD,EAA1BC,KAAMC,EAAoBF,EAApBE,MAAOV,EAAaQ,EAAbR,SAErB,OACE,kBAACN,EAAD,KACE,kBAACK,EAAD,CAAqBC,SAAUA,IAC/B,kBAACC,EAAD,KACE,kBAACC,EAAD,KAAgBO,GAChB,kBAACL,EAAD,KAAiBM,EAAjB,MAEF,kBAACb,EAAD,CAAWc,QAAS,kBAAMJ,EAAQC,KAAlC,mB,2uBChBC,IAAMI,EAA6BjB,IAAOC,IAAV,KAU1BiB,EAAiBlB,IAAOmB,GAAV,KAcdC,EAAmBpB,IAAOC,IAAV,KCHdoB,eAhBW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,MAAOC,EAAjC,EAAiCA,UAAjC,OACxB,kBAACT,EAAD,KACE,kBAACC,EAAD,CAAgBF,QAAS,kBAAMQ,EAAQG,KAAR,UAAgBF,EAAMG,KAAtB,YAA8BF,MAC1DJ,EAAMO,eAET,kBAACT,EAAD,KACGG,EACEO,QAAO,SAACjB,EAAMkB,GAAP,OAAeA,EAAM,KAC5BzC,KAAK,SAAAuB,GAAI,OACR,kBAAC,EAAD,CAAgBtB,IAAKsB,EAAKmB,GAAInB,KAAMA,Y,sHCd9C,IAKeoB,EALqBjC,IAAOC,IAAV,KCgB3BiC,EAAkBC,YAAyB,CAC7CjD,YAAcC,IAGHuB,cAAQwB,EAARxB,EAZa,SAAC,GAAD,IAAExB,EAAF,EAAEA,YAAF,OACxB,kBAAC,EAAD,KACKA,EAAYI,KAAI,gBAAG0C,EAAH,EAAGA,GAAOI,EAAV,6BACb,kBAAC,EAAD,eAAmB7C,IAAKyC,GAAQI,WCLtCF,EAAkBC,YAAyB,CAC/CtC,UAAWL,IAQE6C,EALsBC,YACnC5B,YAAQwB,GACRvC,EAFmC2C,CAGnCC,G,+fCbK,IAAMC,EAA0BxC,IAAOC,IAAV,KAWvBwC,EAAiBzC,IAAOC,IAAV,KCcZS,eAJS,SAAE5B,EAAO4D,GAAT,MAAwB,CAC5CC,YVV4BC,EUUEF,EAASjB,MAAMoB,OAAOC,aVTpD7D,YACI,CAACD,IACD,SAAAE,GAAW,OAAKA,EAAcA,EAAY0D,GAAsB,SUOF9D,IVVtC,IAAA8D,IUajBlC,EAlBQ,SAAC,GAAkB,IAAjBiC,EAAgB,EAAhBA,WACbrB,EAAiBqB,EAAjBrB,MAAOC,EAAUoB,EAAVpB,MACf,OACI,kBAACiB,EAAD,KACI,4BAAKlB,EAAMO,eACX,kBAACY,EAAD,KACKlB,EAAMjC,KAAI,SAAAuB,GAAI,OACX,kBAAC,EAAD,CAAgBtB,IAAKsB,EAAKmB,GAAInB,KAAMA,YCRlDqB,EAAkBC,YAAyB,CAC/CtC,UAAWH,IAQE8C,GALiBF,YAC9B5B,YAAQwB,GACRvC,EAF8B2C,CAG9BS,GCmBarC,sBACb,MALyB,SAAAC,GAAQ,MAAK,CACtCqC,sBAAuB,kBAAMrC,EAASqC,mBAGzBtC,EAzBE,SAAC,GAAoC,IAAnCe,EAAkC,EAAlCA,MAAOuB,EAA2B,EAA3BA,sBAMxB,OAJAC,qBAAU,WACND,MACD,CAACA,IAGF,yBAAKE,UAAU,aACX,kBAAC,IAAD,CACEC,OAAK,EACLvB,KAAI,UAAKH,EAAMG,MACfwB,UAAWf,IAEb,kBAAC,IAAD,CACET,KAAI,UAAKH,EAAMG,KAAX,kBACJwB,UAAWZ","file":"static/js/7.b2d51162.chunk.js","sourcesContent":["import {createSelector} from 'reselect';\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n    [selectShop],\r\n    shop => shop.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n    [selectCollections],\r\n    collections => (collections ? Object.keys(collections).map(key => collections[key]) : [])\r\n);\r\n\r\nexport const selectCollection = collectionUrlParam => (\r\n    createSelector(\r\n        [selectCollections],\r\n        collections => (collections ? collections[collectionUrlParam] : null)\r\n    )\r\n);\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n    [selectShop],\r\n    shop => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n    [selectShop],\r\n    shop => !shop.collections\r\n);","import React from \"react\";\r\n\r\nimport {default as Spinners} from '../spinner/spinner.component'\r\n\r\nconst WithSpinner = (WrappedComponent) => {\r\n  const Spinner = ({ isLoading, ...otherProps }) => {\r\n    return isLoading ? <Spinners /> : <WrappedComponent {...otherProps} />;\r\n  };\r\n\r\n  return Spinner;\r\n};\r\n\r\nexport default WithSpinner;\r\n","import styled from \"styled-components\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n  position: relative;\r\n  width: 22vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 350px;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n  \r\n\r\n  &:hover {\r\n    button {\r\n      display: block;\r\n      opacity: 0.85;\r\n    }\r\n\r\n    .image {\r\n      opacity: 0.8;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 40vw;\r\n    &:hover {\r\n      .image {\r\n        opacity: unset;\r\n      }\r\n      button {\r\n        opacity: unset;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const AddButton = styled(CustomButton)`\r\n  display: none;\r\n  position: absolute;\r\n  top: 255px;\r\n  width: 80%;\r\n  opacity: 0.6;\r\n  font-family: 'Open Sans Condensed', sans-serif;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    display: block;\r\n    opacity: 0.9;\r\n    min-width: unset;\r\n    padding: 0 10px;\r\n    border-radius : 0.2rem;\r\n  }\r\n`;\r\n\r\nexport const CollectionItemImage = styled.div`\r\n  width: 100%;\r\n  height: 95%;\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin-bottom: 5px;\r\n  box-shadow : 1px 2px 12px #636e72;\r\n  border-radius: 0.25rem;\r\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\r\n`;\r\n\r\nexport const CollectionFooterContainer = styled.div`\r\n  width: 100%;\r\n  height: 5%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const NameContainer = styled.span`\r\n  width: 90%;\r\n  margin-bottom: 15px;\r\n\r\n  @media screen and (max-width : 800px){\r\n    width : 80%;\r\n  }\r\n`;\r\n\r\nexport const PriceContainer = styled.span`\r\n  width: 10%;\r\n  text-align: right;\r\n  \r\n  @media screen and (max-width : 800px){\r\n    width : 20%;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addItem } from '../../redux/cart/cart.actions';\r\n\r\nimport { CollectionItemContainer, CollectionFooterContainer,CollectionItemImage, PriceContainer, NameContainer, AddButton} from './collection-item.styles'\r\n\r\n\r\nconst CollectionItem = ({ item, addItem }) => {\r\n  const { name, price, imageUrl } = item;\r\n\r\n  return (\r\n    <CollectionItemContainer>\r\n      <CollectionItemImage imageUrl={imageUrl}/>\r\n      <CollectionFooterContainer>\r\n        <NameContainer>{name}</NameContainer>\r\n        <PriceContainer>{price}$</PriceContainer>\r\n      </CollectionFooterContainer>\r\n      <AddButton onClick={() => addItem(item)}>\r\n        Add to cart\r\n      </AddButton>\r\n    </CollectionItemContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addItem: item => dispatch(addItem(item))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(CollectionItem);","import styled from 'styled-components';\r\n\r\nexport const CollectionPreviewContainer = styled.div`\r\n   display: flex;\r\n   flex-direction: column;\r\n   margin-bottom: 30px;  \r\n\r\n   @media screen and (max-width: 800px) {\r\n      align-items: center;\r\n    }\r\n`;\r\n\r\nexport const TitleContainer = styled.h1`\r\n   font-size: 28px;\r\n   margin-bottom: 25px;\r\n   cursor : pointer;\r\n\r\n   &:hover{\r\n      color : #b2bec3;\r\n   }\r\n\r\n   @media screen and (max-width : 800px){\r\n      font-size : 24px;\r\n   }\r\n`;\r\n\r\nexport const PreviewContainer = styled.div`\r\n   display: flex;\r\n   justify-content: space-between;\r\n\r\n   @media screen and (max-width: 800px) {\r\n      display: grid;\r\n      grid-template-columns: 1fr 1fr;\r\n      grid-gap: 15px;\r\n    }\r\n`;","import React from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nimport CollectionItem from '../collection-item/collection-item.component';\r\n\r\nimport { CollectionPreviewContainer, TitleContainer, PreviewContainer } from './collection-preview.styles';\r\n\r\nconst CollectionPreview = ({ title, items, history, match, routeName }) => (\r\n  <CollectionPreviewContainer>\r\n    <TitleContainer onClick={() => history.push(`${match.path}/${routeName}`)}>\r\n      {title.toUpperCase()}\r\n    </TitleContainer>\r\n    <PreviewContainer>\r\n      {items\r\n        .filter((item, idx) => idx < 4)\r\n        .map( item => (\r\n          <CollectionItem key={item.id} item={item} />\r\n        ))}\r\n    </PreviewContainer>\r\n  </CollectionPreviewContainer>\r\n);\r\n\r\n\r\nexport default withRouter(CollectionPreview);","import styled from 'styled-components';\r\n\r\nconst CollectionsOverviewCotainer = styled.div`\r\n   display: flex;\r\n   flex-direction: column;\r\n`;\r\n\r\nexport default CollectionsOverviewCotainer;\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createStructuredSelector} from 'reselect';\r\n\r\nimport {selectCollectionsForPreview} from '../../redux/shop/shop.selector';\r\n\r\nimport CollectionPreview from '../../components/collection-preview/collection-preview.component';\r\n\r\nimport CollectionsOverviewContainer from './collection-overview.styles';\r\n\r\nconst CollectionsOverview = ({collections}) => (\r\n    <CollectionsOverviewContainer>\r\n        {collections.map(({ id, ...otherCollectionsProps }) => (\r\n            <CollectionPreview key={id} {...otherCollectionsProps} />\r\n        ))}\r\n    </CollectionsOverviewContainer>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    collections : selectCollectionsForPreview\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionsOverview);","import { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from 'redux';\r\n\r\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selector';\r\nimport WithSpinner from '../with-spinner/with-spinner.component';\r\nimport CollectionsOverview from './collection-overview.component';\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoading: selectIsCollectionFetching\r\n});\r\n\r\nconst CollectionsOverviewContainer = compose(\r\n  connect(mapStateToProps),\r\n  WithSpinner\r\n)(CollectionsOverview);\r\n\r\nexport default CollectionsOverviewContainer;","import styled from 'styled-components';\r\n\r\nexport const CollectionPageContainer = styled.div`\r\n   display: flex;\r\n   flex-direction: column;\r\n\r\n\r\n   h2 {\r\n      font-size: 38px;\r\n      margin: 0 auto 30px;\r\n   }\r\n`;\r\n\r\nexport const ItemsContainer = styled.div`\r\n   display: grid;\r\n   grid-template-columns: 1fr 1fr 1fr 1fr;\r\n   grid-gap: 10px;\r\n\r\n   & > div {\r\n      margin-bottom: 30px;\r\n   }\r\n   \r\n   @media screen and (max-width : 800px){\r\n      grid-template-columns : 1fr 1fr;\r\n      grid-gap : 20px;\r\n   }\r\n`;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport CollectionItem from '../../components/collection-item/collection-item.component';\r\n\r\nimport {selectCollection} from '../../redux/shop/shop.selector';\r\n\r\nimport { CollectionPageContainer, ItemsContainer } from './collection.styles'\r\n\r\nconst CollectionPage = ({collection}) => {\r\n    const { title, items } = collection;\r\n    return (\r\n        <CollectionPageContainer> \r\n            <h2>{title.toUpperCase()}</h2>\r\n            <ItemsContainer>\r\n                {items.map(item => (\r\n                    <CollectionItem key={item.id} item={item} />\r\n                ))}\r\n            </ItemsContainer>\r\n        </CollectionPageContainer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ( state, ownProps ) => ({\r\n    collection : selectCollection(ownProps.match.params.collectionId)(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionPage);","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selector';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport CollectionPage from './collection.component';\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoading: selectIsCollectionsLoaded\r\n});\r\n\r\nconst CollectionPageContainer = compose(\r\n  connect(mapStateToProps),\r\n  WithSpinner\r\n)(CollectionPage);\r\n\r\nexport default CollectionPageContainer;","import React, {useEffect} from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\r\n\r\nimport CollectionsOverviewContainer from '../../components/collections-overview/collection-overview.container';\r\nimport CollectionPageContainer from '../collection/collection.container';\r\n\r\nconst ShopPage = ({match, fetchCollectionsStart}) => {\r\n\r\n  useEffect(() => {\r\n      fetchCollectionsStart();\r\n  }, [fetchCollectionsStart]);\r\n\r\n  return (\r\n    <div className='shop-page'>\r\n        <Route\r\n          exact\r\n          path={`${match.path}`}\r\n          component={CollectionsOverviewContainer}\r\n        />\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          component={CollectionPageContainer}\r\n        />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ShopPage);\r\n\r\n\r\n"],"sourceRoot":""}