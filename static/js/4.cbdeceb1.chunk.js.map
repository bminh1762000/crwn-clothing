{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/form-input/form-input.styles.jsx","components/form-input/form-input.component.jsx","components/sign-in/sign-in.styles.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.styles.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","shrinkLabelStyles","css","GroupContainer","styled","div","FormInputContainer","input","FormInputLabel","label","FormInput","handleChange","props","onChange","className","SignInContainer","ButtonsContainer","connect","dispatch","googleSignInStart","emailSignInStart","emailAndPassword","useState","email","password","values","setValues","event","target","name","onSubmit","preventDefault","type","required","onClick","isGoogleSignIn","SignUpContainer","signUpStart","userCredentials","initialValues","displayName","confirmPassword","handleSubmit","a","alert","handleInputChange","SignInAndUpContainer","SignInAndSignUpPage"],"mappings":"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","file":"static/js/4.cbdeceb1.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled, { css } from 'styled-components';\r\n\r\nconst subColor = 'grey';\r\nconst mainColor = 'black';\r\n\r\nconst shrinkLabelStyles = css`\r\n  top: -14px;\r\n  font-size: 12px;\r\n  color: ${mainColor};\r\n`;\r\n\r\nexport const GroupContainer = styled.div`\r\n  position: relative;\r\n  margin: 45px 0;\r\n  input[type='password'] {\r\n    letter-spacing: 0.3em;\r\n  }\r\n`;\r\n\r\nexport const FormInputContainer = styled.input`\r\n  background: none;\r\n  background-color: white;\r\n  color: ${subColor};\r\n  font-size: 18px;\r\n  padding: 10px 10px 10px 5px;\r\n  display: block;\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: 0;\r\n  border-bottom: 1px solid ${subColor};\r\n  margin: 25px 0;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:focus ~ label {\r\n    ${shrinkLabelStyles}\r\n  }\r\n`;\r\n\r\nexport const FormInputLabel = styled.label`\r\n  color: ${subColor};\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  position: absolute;\r\n  pointer-events: none;\r\n  left: 5px;\r\n  top: 10px;\r\n  transition: 300ms ease all;\r\n  &.shrink {\r\n    ${shrinkLabelStyles}\r\n  }\r\n`;","import React from 'react';\r\n\r\nimport {\r\n  GroupContainer,\r\n  FormInputContainer,\r\n  FormInputLabel\r\n} from './form-input.styles';\r\n\r\nconst FormInput = ({ handleChange, label, ...props }) => (\r\n  <GroupContainer>\r\n    <FormInputContainer onChange={handleChange} {...props} />\r\n    {label ? (\r\n      <FormInputLabel className={props.value.length ? 'shrink' : ''}>\r\n        {label}\r\n      </FormInputLabel>\r\n    ) : null}\r\n  </GroupContainer>\r\n);\r\n\r\nexport default FormInput;","import styled from 'styled-components';\r\n\r\nexport const SignInContainer = styled.div`\r\n   width: 400px;\r\n   display: flex;\r\n   flex-direction: column;\r\n\r\n   h2{\r\n      margin: 10px 0;\r\n   }\r\n\r\n   @media (max-width : 768px){\r\n      margin-bottom : 50px;\r\n   }\r\n`;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n   display: flex;\r\n   justify-content: space-between;\r\n`;\r\n","\r\nimport React, { useState } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\n\r\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/user.actions';\r\n\r\nimport { SignInContainer, ButtonsContainer } from './sign-in.styles'\r\n\r\n// class SignIn extends React.Component {\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state = {\r\n//             email : '',\r\n//             password : ''\r\n//         };\r\n//     }\r\n\r\n//     handleSubmit = event => {\r\n//         event.preventDefault();\r\n//         const { emailSignInStart } = this.props;\r\n//         const {email, password} = this.state;\r\n//         emailSignInStart(email, password);\r\n//         this.setState({ email : '', password : ''});\r\n//     };\r\n\r\n//     handleChange = (event) => {\r\n//         const { name, value } = event.target;\r\n        \r\n//         this.setState({\r\n//             [name] : value\r\n//         });\r\n//     };\r\n\r\n//     render() {\r\n//         const { googleSignInStart } = this.props;\r\n//         return (\r\n//             <SignInContainer>\r\n//                 <h2>I already have an account</h2>\r\n//                 <span>Sign in with your email and password</span>\r\n        \r\n//                 <form onSubmit={this.handleSubmit}>\r\n//                     <FormInput\r\n//                         name='email'\r\n//                         type='email'\r\n//                         handleChange={this.handleChange}\r\n//                         value={this.state.email}\r\n//                         label='email'\r\n//                         required\r\n//                     />\r\n//                     <FormInput\r\n//                         name='password'\r\n//                         type='password'\r\n//                         value={this.state.password}\r\n//                         handleChange={this.handleChange}\r\n//                         label='password'\r\n//                         required\r\n//                     />\r\n//                     <ButtonsContainer>\r\n//                         <CustomButton type='submit'> Sign in </CustomButton>\r\n//                         <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn> Sign in with Google </CustomButton>    \r\n//                     </ButtonsContainer>\r\n//                 </form>\r\n//           </SignInContainer>\r\n//         )\r\n//     };\r\n// };\r\nconst SignIn = ({googleSignInStart, emailSignInStart}) => {\r\n    const initialValues = {\r\n        email : '',\r\n        password : ''\r\n    };\r\n\r\n    const [values, setValues] = useState(initialValues);\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        const {email, password} = values;\r\n        emailSignInStart({email, password});\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const {name, value} = event.target;\r\n\r\n        setValues({...values, [name] : value});\r\n    }\r\n\r\n    return (\r\n        <SignInContainer>\r\n            <h2>I already have an account</h2>\r\n            <span>Sign in with your email and password</span>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <FormInput\r\n                    name='email'\r\n                    type='email'\r\n                    value={values.email}\r\n                    handleChange={handleChange}\r\n                    label='email'\r\n                    required\r\n                />\r\n                <FormInput\r\n                    name='password'\r\n                    type='password'\r\n                    value={values.password}\r\n                    handleChange={handleChange}\r\n                    label='password'\r\n                    required\r\n                />\r\n                <ButtonsContainer>\r\n                    <CustomButton type='submit'> Sign in </CustomButton>\r\n                    <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn> Sign in with Google </CustomButton>    \r\n                </ButtonsContainer>\r\n            </form>\r\n        </SignInContainer>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart : () => dispatch(googleSignInStart()),\r\n    emailSignInStart : (emailAndPassword) => dispatch(emailSignInStart(emailAndPassword)) \r\n});\r\n\r\nexport default connect(null,mapDispatchToProps)(SignIn);\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const SignUpContainer = styled.div`\r\n   display: flex;\r\n   flex-direction: column;\r\n   width: 400px;\r\n\r\n   h2 {\r\n   margin: 10px 0;\r\n   } \r\n`;","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nimport { SignUpContainer } from \"./sign-up.styles\";\r\nimport { signUpStart } from \"../../redux/user/user.actions\";\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n  const initialValues = {\r\n    displayName : '',\r\n    email : '',\r\n    password : '',\r\n    confirmPassword : '',\r\n  }\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const {displayName, email, password, confirmPassword} = values;\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"passwords don't match\");\r\n      return;\r\n    }\r\n\r\n    signUpStart({ email, password, displayName });\r\n    setValues(initialValues);\r\n  };\r\n  \r\n  const handleInputChange = event => {\r\n    const {name, value} = event.target;\r\n\r\n    setValues({...values, [name] : value});\r\n  }\r\n\r\n  return (\r\n    <SignUpContainer>\r\n      <h2>I do not have a account</h2>\r\n      <span>Sign up with your email and password</span>\r\n      <form className=\"sign-up-form\" onSubmit={handleSubmit}>\r\n        <FormInput\r\n          type=\"text\"\r\n          name=\"displayName\"\r\n          value={values.displayName}\r\n          onChange={handleInputChange}\r\n          label=\"Display Name\"\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={values.email}\r\n          onChange={handleInputChange}\r\n          label=\"Email\"\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={values.password}\r\n          onChange={handleInputChange}\r\n          label=\"Password\"\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          value={values.confirmPassword}\r\n          onChange={handleInputChange}\r\n          label=\"Confirm Password\"\r\n          required\r\n        />\r\n        <CustomButton type=\"submit\">SIGN UP</CustomButton>\r\n      </form>\r\n    </SignUpContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);\r\n","import styled from 'styled-components';\r\n\r\nexport const SignInAndUpContainer = styled.div`\r\n   max-width: 900px;\r\n   display: flex;\r\n   justify-content: space-between;\r\n   margin: 30px auto;\r\n\r\n   @media (max-width : 768px) {\r\n      flex-direction : column;\r\n      justify-content : center;\r\n      align-items : center;\r\n   }\r\n`;","import React from 'react';\r\n\r\nimport SignIn from '../../components/sign-in/sign-in.component';\r\nimport SignUp from '../../components/sign-up/sign-up.component';\r\n\r\nimport {SignInAndUpContainer} from './sign-in-and-sign-up.styles';\r\n\r\nconst SignInAndSignUpPage = () => (\r\n    <SignInAndUpContainer>\r\n        <SignIn />\r\n        <SignUp />\r\n    </SignInAndUpContainer>\r\n)\r\n\r\nexport default SignInAndSignUpPage;\r\n"],"sourceRoot":""}